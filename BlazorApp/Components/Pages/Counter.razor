@page "/counter/{initialData?}"
@page "/counter2"


@rendermode InteractiveServer

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me </button>

<button class="btn btn-primary" @onclick="() => currentCount+= 2">Click me 2</button>

<button class="btn btn-primary" @onclick="IncrementCountAsync">Click me 3</button>

<button class="btn btn-primary" @onclick="IncrementCountOwn">Click me 4</button>

<p>InitialData=@InitialData</p>

<div class="mt-3">
    @* <input type="text" value="@text" @onchange="OnChange" @oninput="OnInput"> *@
    <input @bind="text" @bind:event="oninput" @bind:after="Search" >

    <p>@text</p>
    @* <p>@text2</p> *@

    <button @onclick="OnClickClear">Clear</button>


    <p>@searchText</p>
</div>

@* <div style="background-color: aqua;" @onmouseover="OnMouseOver" @onmouseout="OnMouseOut">@divText</div>

<MyButton OnClick="IncrementCount" class="btn btn-primary"> My Button  </MyButton> *@


@if(currentCount > 5){
    <p>You win!!</p>
}

<ul>
    @for(int i = 0; i < currentCount; i++){
        <li>Click - @i</li>
    }
</ul>

@code {
    private int currentCount = 0;

    string text = "";
    string text2 = "";
    string divText = "Mouse out";
    string searchText = "";

    [Parameter]
    public int IncrementAmount {get; set;} = 3;

    [Parameter]
    public string InitialData {get; set;}

    private void IncrementCount()
    {
        currentCount+= IncrementAmount;
    }

    async Task IncrementCountAsync()
    {
        await Task.Delay(1000);

        currentCount++;
    }
    private void IncrementCountOwn(MouseEventArgs e)
    {
        currentCount++;
    }
    private void OnChange(ChangeEventArgs e)
    {
        text = (string)e.Value!;
    }
    private void OnInput(ChangeEventArgs e)
    {
        text2 = (string)e.Value!;
    }
    private void OnMouseOver(MouseEventArgs e) => divText = "Mouse over";
    private void OnMouseOut(MouseEventArgs e) => divText = "Mouse out";

    private void OnClickClear(MouseEventArgs e) => text = "";

    public async Task Search()
    {
        searchText = "Searchering...";

        await Task.Delay(2000);

        searchText = "Finde";
    }
      
}

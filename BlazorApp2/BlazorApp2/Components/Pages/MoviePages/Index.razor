@page "/movies"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using BlazorApp2
@using BlazorApp2.Data
@implements IAsyncDisposable
@inject IDbContextFactory<BlazorApp2.Data.BlazorApp2Context> DbFactory
@rendermode InteractiveServer

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
    <a href="movies/create">Create New</a>
</p>

<QuickGrid Class="table" Items="FilteredMovies" Pagination="state">
    <PropertyColumn Property="movie => movie.Title" Sortable="true">
            <ColumnOptions>
                <div>
                <input type="search" @bind="titleFilter" @bind:event="oninput" autofocus/>
                </div>
            </ColumnOptions>
        </PropertyColumn>
    <PropertyColumn Property="movie => movie.ReleaseDate" Title="Release date" Format="MM/dd/yyyy" Sortable="true" />
    <PropertyColumn Property="movie => movie.Genre" Sortable="true" />
    <PropertyColumn Property="movie => movie.Price" Sortable="true" />

    <TemplateColumn Context="movie">
        <a href="@($"movies/edit?id={movie.Id}")">Edit</a> |
        <a href="@($"movies/details?id={movie.Id}")">Details</a> |
        <a href="@($"movies/delete?id={movie.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

<Paginator State="state" />

@code {
    private BlazorApp2Context context = default!;

    public PaginationState state = new PaginationState { ItemsPerPage = 1 };

    public string titleFilter = "";

    public IQueryable<Movie> FilteredMovies => context.Movie.Where(m => m.Title!.Contains(titleFilter));

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
